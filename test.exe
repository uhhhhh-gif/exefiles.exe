using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;

public class ScreenMosher : Form
{
    private Random random = new Random();
    private bool isRunning = true;
    private Thread mosherThread;

    public ScreenMosher()
    {
        this.FormBorderStyle = FormBorderStyle.None;
        this.WindowState = FormWindowState.Maximized;
        this.TopMost = true;
        this.DoubleBuffered = true;
        this.BackColor = Color.Black;
        this.Cursor = Cursors.Arrow;
        this.KeyPreview = true;

        this.KeyDown += (s, e) =>
        {
            if (e.KeyCode == Keys.Escape)
            {
                isRunning = false;
                Application.Exit();
            }
        };

        mosherThread = new Thread(MoshScreen);
        mosherThread.Start();
    }

    private void MoshScreen()
    {
        while (isRunning)
        {
            try
            {
                Rectangle screenBounds = Screen.PrimaryScreen.Bounds;
                int width = screenBounds.Width;
                int height = screenBounds.Height;

                using (Bitmap screenshot = new Bitmap(width, height, PixelFormat.Format32bppArgb))
                {
                    using (Graphics gfx = Graphics.FromImage(screenshot))
                    {
                        gfx.CopyFromScreen(screenBounds.X, screenBounds.Y, 0, 0, screenBounds.Size, CopyPixelOperation.SourceCopy);
                    }

                    int x1 = random.Next(width);
                    int y1 = random.Next(height);
                    int x2 = random.Next(width);
                    int y2 = random.Next(height);
                    int w = random.Next(width / 4);
                    int h = random.Next(height / 4);

                    x1 = Math.Max(0, Math.Min(x1, width - w));
                    y1 = Math.Max(0, Math.Min(y1, height - h));
                    x2 = Math.Max(0, Math.Min(x2, width - w));
                    y2 = Math.Max(0, Math.Min(y2, height - h));

                    Rectangle srcRect = new Rectangle(x1, y1, w, h);
                    Rectangle destRect = new Rectangle(x2, y2, w, h);

                    using (Graphics screenGfx = CreateGraphics())
                    {
                        screenGfx.DrawImage(screenshot, destRect, srcRect, GraphicsUnit.Pixel);
                    }
                }

                Thread.Sleep(10);
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error: {ex.Message}");
                isRunning = false;
            }
        }
    }

    [STAThread]
    public static void Main(string[] args)
    {
        Application.EnableVisualStyles();
        Application.SetCompatibleTextRenderingDefault(false);
        Application.Run(new ScreenMosher());
    }
}
